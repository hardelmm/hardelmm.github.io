<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on HardElm</title>
    <link>https://hardelmm.github.io/post/</link>
    <description>Recent content in Posts on HardElm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 07 Mar 2023 15:10:00 +0000</lastBuildDate><atom:link href="https://hardelmm.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>接口测试范围</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E8%8C%83%E5%9B%B4/</link>
      <pubDate>Tue, 07 Mar 2023 15:10:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E8%8C%83%E5%9B%B4/</guid>
      <description>本文简要概述接口测试范围以及部分注意事项 实际项目开发过程中，由于前后端结构分离，常通过前端进行输入限制，但若涉及未加密的接口，易留下安全性隐</description>
    </item>
    
    <item>
      <title>数据结构汇总</title>
      <link>https://hardelmm.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%B1%87%E6%80%BB/</link>
      <pubDate>Mon, 06 Mar 2023 18:10:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%B1%87%E6%80%BB/</guid>
      <description>前言： 数据结构是数据按照特点关系进行存储或组织的的集合，特殊的结构在不同的应用场景下会有不一样的处理效率。 常用的数据结构根据访问特点可以分为</description>
    </item>
    
    <item>
      <title>Git常用命令</title>
      <link>https://hardelmm.github.io/post/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 02 Mar 2023 23:56:03 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>常规流程 init本地初始化&amp;ndash;&amp;gt;add更新暂存区&amp;ndash;&amp;gt;commit暂存区更新至版本库&amp;ndash;&amp;gt;p</description>
    </item>
    
    <item>
      <title>Git底层数据结构</title>
      <link>https://hardelmm.github.io/post/git%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Thu, 02 Mar 2023 23:45:28 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/git%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>前言：本文简要介绍Git对象生命周期变化、文件结构以及作用 因为commit对象的存在，Git分布式管理系统可以理解为以多维方式存储数据 com</description>
    </item>
    
    <item>
      <title>数据库性能调优要点</title>
      <link>https://hardelmm.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E8%A6%81%E7%82%B9/</link>
      <pubDate>Tue, 28 Feb 2023 00:02:37 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E8%A6%81%E7%82%B9/</guid>
      <description></description>
    </item>
    
    <item>
      <title>接口自动化测试框架模型（二）</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E4%BA%8C/</link>
      <pubDate>Sat, 20 Aug 2022 22:16:46 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E4%BA%8C/</guid>
      <description>前言：本文简要介绍针对实际业务场景下业务逻辑/流程的接口自动化实现方案，前文参阅《接口自动化测试框架模型（一）》</description>
    </item>
    
    <item>
      <title>接口自动化测试框架模型（一）</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E4%B8%80/</link>
      <pubDate>Wed, 27 Apr 2022 15:37:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E4%B8%80/</guid>
      <description>前言：本文简要介绍接口自动化测试框架实现方案，思路如下： 构建测试数据（用例） 测试用例执行 结果处理与校验 一.构造测试数据 直接使用json进行描</description>
    </item>
    
    <item>
      <title>st-load安装与使用</title>
      <link>https://hardelmm.github.io/post/srs-bench%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 11 Mar 2022 16:18:38 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/srs-bench%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>项目需要，需对直播服务器做性能测试，尝试了Jmeter，LoadRunner后选择了st-load。 什么是st-load 服务器负载测试工具(</description>
    </item>
    
    <item>
      <title>自动化测试持续集成</title>
      <link>https://hardelmm.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</link>
      <pubDate>Thu, 27 Jan 2022 20:32:36 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</guid>
      <description>前言：本文简要记录自动化测试CI方案，详细内容待补充 1.获取目录下所有文件名 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # ! / bin/ bash #采集—个函数 readDir() { local dir=$1 #</description>
    </item>
    
    <item>
      <title>接口自动化测试实例（一）</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B-1/</link>
      <pubDate>Thu, 27 Jan 2022 20:22:36 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B-1/</guid>
      <description>前言：本文简要介绍单接口（业务流）自动化测试框架实现方案，思路如下： 测试数据（用例）读取与处理 测试用例执行引擎 结果校验以及断言 测试结果处理与</description>
    </item>
    
    <item>
      <title>Jmeter&#43;beanshell</title>
      <link>https://hardelmm.github.io/post/jmeter&#43;beanshell/</link>
      <pubDate>Sun, 16 Jan 2022 21:46:59 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/jmeter&#43;beanshell/</guid>
      <description>一.jmeter接口测试适用场景 jmeter横向对比其他接口测试工具，拥有UI界面，配置测试组件更易上手，适用语言基础薄弱的测试人员。 通过扩</description>
    </item>
    
    <item>
      <title>Unittest和pytest</title>
      <link>https://hardelmm.github.io/post/unittest%E5%92%8Cpytest/</link>
      <pubDate>Thu, 06 Jan 2022 21:56:13 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/unittest%E5%92%8Cpytest/</guid>
      <description>一、用例编写规则 1.unittest提供了test cases、test suites、test fixtures、test runner相关的类,</description>
    </item>
    
    <item>
      <title>ffmpeg转码</title>
      <link>https://hardelmm.github.io/post/%E5%9F%BA%E4%BA%8Effmpeg%E8%BF%9B%E8%A1%8C%E8%BD%AC%E7%A0%81%E5%B7%A5%E5%85%B7%E7%9A%84%E7%BC%96%E5%86%99%E6%9C%AA%E5%AE%8C%E6%88%90/</link>
      <pubDate>Tue, 28 Dec 2021 09:37:30 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E5%9F%BA%E4%BA%8Effmpeg%E8%BF%9B%E8%A1%8C%E8%BD%AC%E7%A0%81%E5%B7%A5%E5%85%B7%E7%9A%84%E7%BC%96%E5%86%99%E6%9C%AA%E5%AE%8C%E6%88%90/</guid>
      <description>参考了一些资料，学习过程中尝试写一个转码工具，特此记录一些代码，留作参考。 一、GUI： package cn.com.huangyl.tool; import java.awt.BorderLayout; import java.awt.GridLayout; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.io.File; import java.io.IOException; import java.util.ArrayList; import java.util.Calendar; import java.util.List; import javax.swing.DefaultComboBoxModel; import javax.swing.JButton; import javax.swing.JComboBox; import</description>
    </item>
    
    <item>
      <title>Python数据库基础操作</title>
      <link>https://hardelmm.github.io/post/python%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 29 Apr 2021 21:52:23 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>一.python连接mysql数据库 1.使用mysqlclient连接 mysqlclient包是用于MySQL的最流行的Python包之一。</description>
    </item>
    
    <item>
      <title>Python文本基础操作</title>
      <link>https://hardelmm.github.io/post/python%E6%96%87%E6%9C%AC%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 27 Apr 2021 22:16:57 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python%E6%96%87%E6%9C%AC%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python发送邮件</title>
      <link>https://hardelmm.github.io/post/python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</link>
      <pubDate>Tue, 27 Apr 2021 22:15:39 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 # -*- coding: utf-8 -*- # @Time : 2020/5/20 13:53 # @Author : huangyl # @FileName:</description>
    </item>
    
    <item>
      <title>Python Excel基础操作</title>
      <link>https://hardelmm.github.io/post/python-excel%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 27 Apr 2021 22:07:21 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python-excel%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>1.新建excel 1 2 3 open_excel = xlwt.Workbook(encoding=&amp;#39;utf-8&amp;#39;, style_compression=0) #style_compression参数设置是否压缩 open_sheet = open_excel.add_sheet(SheetName) open_excel.save(result_filename) 2.写入/修改数据 1 2 open_sheet.write(x,y,content) open_excel.save(result_filename) 3.单元格样式修改</description>
    </item>
    
    <item>
      <title>Postman&#43;js</title>
      <link>https://hardelmm.github.io/post/postman&#43;js/</link>
      <pubDate>Fri, 28 Jun 2019 20:03:21 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/postman&#43;js/</guid>
      <description>一.postman适用场景 postman相比其他接口测试工具轻，但也因此功能较为局限，比如很难做流程控制，断言方式只能通过脚本实现 二.pos</description>
    </item>
    
    <item>
      <title>HTTP协议基础</title>
      <link>https://hardelmm.github.io/post/http%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 28 Jun 2019 00:03:21 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/http%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/</guid>
      <description>一.HTTP协议概念 HTTP协议又叫做超文本传输协议（Hyper Text Transfer Protocol ），在做网络请求时，基本上时使用HTTP协议 HTTP使用统一资源标识符</description>
    </item>
    
    <item>
      <title>Xtrabackup使用文档</title>
      <link>https://hardelmm.github.io/post/xtrabackup%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</link>
      <pubDate>Thu, 09 May 2019 15:00:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/xtrabackup%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</guid>
      <description>Xtrabackup介绍 Xtrabackup是由percona开发的一个开源软件，它是innodb热备工具ibbackup（收费的商业软件）</description>
    </item>
    
  </channel>
</rss>
