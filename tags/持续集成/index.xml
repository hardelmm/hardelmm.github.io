<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>持续集成 on HardElm</title>
    <link>https://hardelmm.github.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</link>
    <description>Recent content in 持续集成 on HardElm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 27 Mar 2022 15:37:00 +0000</lastBuildDate><atom:link href="https://hardelmm.github.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>接口自动化测试实例（二）</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B-2/</link>
      <pubDate>Sun, 27 Mar 2022 15:37:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B-2/</guid>
      <description>前言：本文简要介绍单接口自动化测试框架实现方案，思路如下： 构建测试数据（用例） 测试用例执行引擎 结果校验以及断言 测试结果处理与展示 一.测试数据</description>
    </item>
    
    <item>
      <title>自动化测试持续集成</title>
      <link>https://hardelmm.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</link>
      <pubDate>Thu, 27 Jan 2022 20:32:36 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</guid>
      <description>前言：本文简要记录自动化测试CI方案，详细内容待补充 1.获取目录下所有文件名 1# ! / bin/ bash 2#采集—个函数 3readDir() { 4 local dir=$1 #获取传入的目录路径 5 local files #</description>
    </item>
    
    <item>
      <title>接口自动化测试实例（一）</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B-1/</link>
      <pubDate>Thu, 27 Jan 2022 20:22:36 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B-1/</guid>
      <description>前言：本文简要介绍单接口（业务流）自动化测试框架实现方案，思路如下： 测试数据（用例）读取与处理 测试用例执行引擎 结果校验以及断言 测试结果处理与</description>
    </item>
    
    <item>
      <title>ansible学习总结</title>
      <link>https://hardelmm.github.io/post/ansible%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 26 Jul 2018 12:30:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/ansible%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</guid>
      <description>背景 之前一直想去学习下，因为各种原因暂时搁置了。最近公司在开发Saas产品，刚好用到ansible等内容，特此针对性了解学习下 ansible</description>
    </item>
    
    <item>
      <title>关于Jenkins持续构建的初步了解</title>
      <link>https://hardelmm.github.io/post/jenkins/</link>
      <pubDate>Sat, 25 Nov 2017 01:30:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/jenkins/</guid>
      <description>背景 略 什么是Jenkins 什么是Jenkins Jenkins是一个用Java编写的开源的持续集成工具，提供了软件开发的持续集成服务，可监控并</description>
    </item>
    
    <item>
      <title>docker kubernetes</title>
      <link>https://hardelmm.github.io/post/docker-kubernetes/</link>
      <pubDate>Mon, 13 Nov 2017 15:30:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/docker-kubernetes/</guid>
      <description>docker简介 啥是docker 1.Docker是一个开源项目，基于Go语言实现，已加入Linux基金会，遵从Apache2.0协议，项目代</description>
    </item>
    
  </channel>
</rss>
