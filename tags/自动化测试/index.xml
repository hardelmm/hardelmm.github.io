<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>自动化测试 on HardElm</title>
    <link>https://hardelmm.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 自动化测试 on HardElm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 27 Jan 2022 20:22:36 +0800</lastBuildDate><atom:link href="https://hardelmm.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python接口自动化(数据驱动)</title>
      <link>https://hardelmm.github.io/post/python%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8/</link>
      <pubDate>Thu, 27 Jan 2022 20:22:36 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8/</guid>
      <description>一.读取配置文件 import codecs import configparser configPath = &#39;&#39; class ReadConfig: def __int__(self): fd = open(configPath,&amp;quot;rb&amp;quot;) data = fd.read() #remove BOM if data[:3] == codecs.BOM_UTF8: data = data[3:] file = codecs.open(configPath,&amp;quot;w&amp;quot;) file.write(data) file.close() fd.close() self.cf = configparser.ConfigParser() self.cf.read(configPath,encoding=&#39;UTF-8-sig&#39;) def get_configOne(self,name): value = self.cf.get(&amp;quot;configOne&amp;quot;,name) return value #...... def get_all(self,*args): confs = {} for sec in args: options = self.cf.options(sec) for i in options: confs[i] =</description>
    </item>
    
    <item>
      <title>Jmeter&#43;beanshell</title>
      <link>https://hardelmm.github.io/post/jmeter&#43;beanshell/</link>
      <pubDate>Sun, 16 Jan 2022 21:46:59 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/jmeter&#43;beanshell/</guid>
      <description>一.jmeter接口测试适用场景 jmeter横向对比其他接口测试工具，拥有UI界面，配置测试组件更易上手，适用语言基础薄弱的测试人员。 通过扩</description>
    </item>
    
    <item>
      <title>Unittest和pytest</title>
      <link>https://hardelmm.github.io/post/unittest%E5%92%8Cpytest/</link>
      <pubDate>Thu, 06 Jan 2022 21:56:13 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/unittest%E5%92%8Cpytest/</guid>
      <description>一、用例编写规则 1.unittest提供了test cases、test suites、test fixtures、test runner相关的类,</description>
    </item>
    
    <item>
      <title>Postman&#43;js</title>
      <link>https://hardelmm.github.io/post/postman&#43;js/</link>
      <pubDate>Fri, 28 Jun 2019 20:03:21 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/postman&#43;js/</guid>
      <description>一.postman适用场景 postman相比其他接口测试工具轻，但也因此功能较为局限，比如很难做流程控制，断言方式只能通过脚本实现 二.pos</description>
    </item>
    
    <item>
      <title>接口自动化测试</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Wed, 27 Dec 2017 15:37:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E5%AE%9E%E8%B7%B5/</guid>
      <description>背景 公司新近开发了直播云接口服务，提供给华为云市场，我参与了接口的测试工作，深感手工测试效率的低下，使用Postman、SoapUI或者是J</description>
    </item>
    
    <item>
      <title>web自动化测试</title>
      <link>https://hardelmm.github.io/post/web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Sat, 25 Nov 2017 19:30:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</guid>
      <description>进行前需要了解的 测试框架 使用哪种测试框架要根据所测产品的类型来进行选择。 桌面程序的工具有：QTP、 AutoRunner等 web应用的工具有：</description>
    </item>
    
    <item>
      <title>自动化测试的层级</title>
      <link>https://hardelmm.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%9A%84%E5%B1%82%E7%BA%A7/</link>
      <pubDate>Mon, 16 Oct 2017 18:20:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%9A%84%E5%B1%82%E7%BA%A7/</guid>
      <description>背景 接《自动化测试的适用范围》 会用工具就是自动化测试工程师吗 会使用自动化测试工具的测试人员不能够称之为完全的自动化测试人员，这类测试人员被称</description>
    </item>
    
    <item>
      <title>Linux下expect脚本语言的简单使用</title>
      <link>https://hardelmm.github.io/post/expect%E4%BA%A4%E4%BA%92%E8%AF%AD%E8%A8%80%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 24 Jul 2017 13:40:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/expect%E4%BA%A4%E4%BA%92%E8%AF%AD%E8%A8%80%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description>背景 最近在做直播服务器性能测试，因单台推流服务器性能限制，需多台机器同时推流，而且要监控直播平台各个底层服务器的性能，手动推流并开启监控繁琐</description>
    </item>
    
    <item>
      <title>自动化测试的适用范围</title>
      <link>https://hardelmm.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%9A%84%E9%80%82%E7%94%A8%E8%8C%83%E5%9B%B4/</link>
      <pubDate>Wed, 12 Jul 2017 09:30:50 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%9A%84%E9%80%82%E7%94%A8%E8%8C%83%E5%9B%B4/</guid>
      <description>背景 无 适用范围 不适合自动化测试的情况 1、定制型项目（一次性的）。 为客户定制的项目，维护期由客户方承担的，甚至采用的开发语言、运行环境也是客户</description>
    </item>
    
    <item>
      <title>Selenium初学总结</title>
      <link>https://hardelmm.github.io/post/selenium%E5%88%9D%E5%AD%A6%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 12 Jul 2017 09:22:50 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/selenium%E5%88%9D%E5%AD%A6%E6%80%BB%E7%BB%93/</guid>
      <description>背景 工作中研究过一段时间自动化，因为一些原因暂时搁置了，以后会再捡起来，特记录一些selenium基本知识，供以后复习使用。 Selenium</description>
    </item>
    
  </channel>
</rss>
