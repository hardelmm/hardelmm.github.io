<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on HardElm</title>
    <link>https://hardelmm.github.io/tags/python/</link>
    <description>Recent content in python on HardElm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 20 Aug 2022 22:16:46 +0000</lastBuildDate><atom:link href="https://hardelmm.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>接口自动化测试框架模型（二）</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E4%BA%8C/</link>
      <pubDate>Sat, 20 Aug 2022 22:16:46 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E4%BA%8C/</guid>
      <description>前言：本文简要介绍针对实际业务场景下业务逻辑/流程的接口自动化实现方案，前文参阅《》</description>
    </item>
    
    <item>
      <title>接口自动化测试框架模型（一）</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E4%B8%80/</link>
      <pubDate>Sun, 27 Mar 2022 15:37:00 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E4%B8%80/</guid>
      <description>前言：本文简要介绍接口自动化测试框架实现方案，思路如下： 构建测试数据（用例） 测试用例执行 结果处理与校验 一.构造测试数据 直接使用json进行描</description>
    </item>
    
    <item>
      <title>接口自动化测试实例（一）</title>
      <link>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B-1/</link>
      <pubDate>Thu, 27 Jan 2022 20:22:36 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B-1/</guid>
      <description>前言：本文简要介绍单接口（业务流）自动化测试框架实现方案，思路如下： 测试数据（用例）读取与处理 测试用例执行引擎 结果校验以及断言 测试结果处理与</description>
    </item>
    
    <item>
      <title>Unittest和pytest</title>
      <link>https://hardelmm.github.io/post/unittest%E5%92%8Cpytest/</link>
      <pubDate>Thu, 06 Jan 2022 21:56:13 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/unittest%E5%92%8Cpytest/</guid>
      <description>一、用例编写规则 1.unittest提供了test cases、test suites、test fixtures、test runner相关的类,</description>
    </item>
    
    <item>
      <title>Python数据库基础操作</title>
      <link>https://hardelmm.github.io/post/python%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 29 Apr 2021 21:52:23 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>一.python连接mysql数据库 1.使用mysqlclient连接 mysqlclient包是用于MySQL的最流行的Python包之一。</description>
    </item>
    
    <item>
      <title>Python文本基础操作</title>
      <link>https://hardelmm.github.io/post/python%E6%96%87%E6%9C%AC%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 27 Apr 2021 22:16:57 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python%E6%96%87%E6%9C%AC%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python发送邮件</title>
      <link>https://hardelmm.github.io/post/python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</link>
      <pubDate>Tue, 27 Apr 2021 22:15:39 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</guid>
      <description>1# -*- coding: utf-8 -*- 2# @Time : 2020/5/20 13:53 3# @Author : huangyl 4# @FileName: sendEmail.py 5# @Software: PyCharm 6# @Blog ：https://hardelm.com 7 8import smtplib 9from email.mime.text import MIMEText 10from email.mime.multipart import MIMEMultipart 11from email.header import Header 12from email.utils import formataddr 13from readConfig import ReadConfig 14 15class SendEmail(): 16 def</description>
    </item>
    
    <item>
      <title>Python Excel基础操作</title>
      <link>https://hardelmm.github.io/post/python-excel%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 27 Apr 2021 22:07:21 +0800</pubDate>
      
      <guid>https://hardelmm.github.io/post/python-excel%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>1.新建excel 1open_excel = xlwt.Workbook(encoding=&amp;#39;utf-8&amp;#39;, style_compression=0) #style_compression参数设置是否压缩 2open_sheet = open_excel.add_sheet(SheetName) 3open_excel.save(result_filename) 2.写入/修改数据 1open_sheet.write(x,y,content) 2open_excel.save(result_filename) 3.单元格样式修改</description>
    </item>
    
    <item>
      <title>python基础语法</title>
      <link>https://hardelmm.github.io/post/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 23 Nov 2017 20:30:50 +0000</pubDate>
      
      <guid>https://hardelmm.github.io/post/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</guid>
      <description>中文编码 1、python中默认的编码格式是ASCII格式 2、若程序中有中文，需在文件开头加入# -- coding: UTF-8 -- 或者 #coding=utf-8 3、python3.X源码文件默</description>
    </item>
    
  </channel>
</rss>
